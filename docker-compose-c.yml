# Copyright (C) 2024  ANSSI
# SPDX-License-Identifier: CC0-1.0
name: digger

services:
  suricata:
    build: ./suricata
    volumes:
      - "./input_pcaps:/input_pcaps:ro"
      - "./suricata/rules:/suricata/rules:ro"
      - "./suricata/output:/suricata/output:rw"

    # Mode C: PCAP-over-IP (fast, requires root on vulnbox)
    # Connects to a PCAP-over-IP server, such as pcap-broker to read PCAP data.
    command: -r /dev/stdin
    restart: always
    depends_on:
      - pcap-broker
    environment:
      - PCAP_OVER_IP=pcap-broker:4242

  frontend:
    build: ./frontend
    restart: always
    volumes:
      - "./input_pcaps:/input_pcaps:ro" # remove to prevent users from downloading pcaps
      - "./suricata/output:/suricata/output:rw"
      - "./services_config.json:/webapp/services_config.json:rw"
    ports:
      - 0.0.0.0:3000:3000
    env_file:
      - .env

  pcap-broker:
    container_name: pcap-broker-op
    build:
      context: .
      dockerfile_inline: |
        FROM golang:alpine
        RUN apk add --no-cache build-base libpcap-dev openssh-client tcpdump
        RUN go install github.com/fox-it/pcap-broker@latest
        ENTRYPOINT ["pcap-broker"]
    restart: always
    volumes:
      - "~/.ssh/id_ed25519:/root/.ssh/id_ed25519:ro"
    environment:
      PCAP_COMMAND: |-
        ssh root@10.60.1.1 -oStrictHostKeyChecking=no
        tcpdump -U --immediate-mode -ni game -s 65535 -w - not tcp port 22
      LISTEN_ADDRESS: 0.0.0.0:4242

  tshark:
    build:
      context: ./tshark
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - PCAP_TCP_DOMAIN=pcap-broker
      - PCAP_TCP_PORT=4242
      - PCAP_FILE_NAME=dump
    volumes:
      - ./tshark/dumps:/dump-pcap
    entrypoint: docker-entrypoint.sh

  postgres:
    image: postgres:alpine
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust

volumes:
  pgdata: